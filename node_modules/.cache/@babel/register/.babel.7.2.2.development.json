{
  "{\"sourceRoot\":\"/Users/ericweissman/turing/mod3/trapper-keeper-fullstack/trapper-keeper-be\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/ericweissman/turing/mod3/trapper-keeper-fullstack/trapper-keeper-be\",\"filename\":\"/Users/ericweissman/turing/mod3/trapper-keeper-fullstack/trapper-keeper-be/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/ericweissman/turing/mod3/trapper-keeper-fullstack/trapper-keeper-be\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/ericweissman/turing/mod3/trapper-keeper-fullstack/trapper-keeper-be",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/ericweissman/turing/mod3/trapper-keeper-fullstack/trapper-keeper-be",
      "filename": "/Users/ericweissman/turing/mod3/trapper-keeper-fullstack/trapper-keeper-be/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/ericweissman/turing/mod3/trapper-keeper-fullstack/trapper-keeper-be",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/ericweissman/turing/mod3/trapper-keeper-fullstack/trapper-keeper-be/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/ericweissman/turing/mod3/trapper-keeper-fullstack/trapper-keeper-be/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/ericweissman/turing/mod3/trapper-keeper-fullstack/trapper-keeper-be",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar app = express();\napp.use(express.json());\napp.set('port', 3001);\napp.locals.title = 'Trapper Keeper';\napp.locals.notes = [];\napp.locals.items = [];\napp.get('/api/v1/notes', function (request, response) {\n  var notes = app.locals.notes;\n  return response.json({\n    notes: notes\n  });\n});\napp.post('/api/v1/notes', function (request, response) {\n  var id = Date.now();\n  var title = request.body.title;\n\n  if (!title) {\n    return response.status(422), send({\n      error: 'No note title provided'\n    });\n  } else {\n    app.locals.notes.push({\n      id: id,\n      title: title\n    });\n    return response.status(201).json({\n      id: id,\n      title: title\n    });\n  }\n});\napp.get('/api/v1/notes/:id', function (request, response) {\n  var id = request.params.id;\n  var note = app.locals.notes.find(function (note) {\n    return note.id == id;\n  });\n\n  if (note) {\n    return response.status(200).json(note);\n  } else {\n    return response.sendStatus(404);\n  }\n});\napp.delete('/api/v1/notes/:id', function (request, response) {\n  var id = request.params.id;\n  var updatedNotes = app.locals.notes.filter(function (note) {\n    return note.id !== id; //remove or edit this if the above code doesn't work due to parsing\n  });\n  app.locals.notes = updatedNotes;\n  response.status(204).json(\"\".concat(id, \" has been removed\"));\n});\napp.put('/api/v1/notes/:id', function (request, response) {\n  var id = request.params.id;\n  var updatedNotes = app.locals.notes.map(function (note) {\n    if (note.id === id) {\n      note.title = request.body;\n    }\n\n    return note;\n  });\n  app.locals.notes = updatedNotes;\n  response.status(202).json(\"\".concat(request.body, \" has been updated\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImFwcCIsInVzZSIsImpzb24iLCJzZXQiLCJsb2NhbHMiLCJ0aXRsZSIsIm5vdGVzIiwiaXRlbXMiLCJnZXQiLCJyZXF1ZXN0IiwicmVzcG9uc2UiLCJwb3N0IiwiaWQiLCJEYXRlIiwibm93IiwiYm9keSIsInN0YXR1cyIsInNlbmQiLCJlcnJvciIsInB1c2giLCJwYXJhbXMiLCJub3RlIiwiZmluZCIsInNlbmRTdGF0dXMiLCJkZWxldGUiLCJ1cGRhdGVkTm90ZXMiLCJmaWx0ZXIiLCJwdXQiLCJtYXAiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxHQUFHLEdBQUdGLE9BQU8sRUFBbkI7QUFDQUUsR0FBRyxDQUFDQyxHQUFKLENBQVFILE9BQU8sQ0FBQ0ksSUFBUixFQUFSO0FBRUFGLEdBQUcsQ0FBQ0csR0FBSixDQUFRLE1BQVIsRUFBZ0IsSUFBaEI7QUFDQUgsR0FBRyxDQUFDSSxNQUFKLENBQVdDLEtBQVgsR0FBbUIsZ0JBQW5CO0FBQ0FMLEdBQUcsQ0FBQ0ksTUFBSixDQUFXRSxLQUFYLEdBQW1CLEVBQW5CO0FBQ0FOLEdBQUcsQ0FBQ0ksTUFBSixDQUFXRyxLQUFYLEdBQW1CLEVBQW5CO0FBR0FQLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLGVBQVIsRUFBeUIsVUFBQ0MsT0FBRCxFQUFVQyxRQUFWLEVBQXVCO0FBQzlDLE1BQU1KLEtBQUssR0FBR04sR0FBRyxDQUFDSSxNQUFKLENBQVdFLEtBQXpCO0FBQ0EsU0FBT0ksUUFBUSxDQUFDUixJQUFULENBQWM7QUFBQ0ksSUFBQUEsS0FBSyxFQUFMQTtBQUFELEdBQWQsQ0FBUDtBQUNELENBSEQ7QUFLQU4sR0FBRyxDQUFDVyxJQUFKLENBQVMsZUFBVCxFQUEwQixVQUFDRixPQUFELEVBQVVDLFFBQVYsRUFBdUI7QUFDL0MsTUFBTUUsRUFBRSxHQUFH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VkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2VyaWN3ZWlzc21hbi90dXJpbmcvbW9kMy90cmFwcGVyLWtlZXBlci1mdWxsc3RhY2svdHJhcHBlci1rZWVwZXItYmUiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuYXBwLnVzZShleHByZXNzLmpzb24oKSlcblxuYXBwLnNldCgncG9ydCcsIDMwMDEpO1xuYXBwLmxvY2Fscy50aXRsZSA9ICdUcmFwcGVyIEtlZXBlcic7XG5hcHAubG9jYWxzLm5vdGVzID0gW107XG5hcHAubG9jYWxzLml0ZW1zID0gW107XG5cblxuYXBwLmdldCgnL2FwaS92MS9ub3RlcycsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICBjb25zdCBub3RlcyA9IGFwcC5sb2NhbHMubm90ZXM7XG4gIHJldHVybiByZXNwb25zZS5qc29uKHtub3Rlc30pXG59KTtcblxuYXBwLnBvc3QoJy9hcGkvdjEvbm90ZXMnLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgY29uc3QgaWQgPSBEYXRlLm5vdygpO1xuICBjb25zdCB7IHRpdGxlIH0gPSByZXF1ZXN0LmJvZHk7XG5cbiAgaWYgKCF0aXRsZSkge1xuICAgIHJldHVybiByZXNwb25zZS5zdGF0dXMoNDIyKSxzZW5kKHtcbiAgICAgIGVycm9yOiAnTm8gbm90ZSB0aXRsZSBwcm92aWRlZCdcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBhcHAubG9jYWxzLm5vdGVzLnB1c2goeyBpZCwgdGl0bGUgfSlcbiAgICByZXR1cm4gcmVzcG9uc2Uuc3RhdHVzKDIwMSkuanNvbiggeyBpZCwgdGl0bGUgfSk7XG4gIH1cbn0pO1xuXG5hcHAuZ2V0KCcvYXBpL3YxL25vdGVzLzppZCcsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuICBjb25zdCB7IGlkIH0gPSByZXF1ZXN0LnBhcmFtcztcbiAgY29uc3Qgbm90ZSA9IGFwcC5sb2NhbHMubm90ZXMuZmluZChub3RlID0+IG5vdGUuaWQgPT0gaWQpO1xuICBpZiAobm90ZSkge1xuICAgIHJldHVybiByZXNwb25zZS5zdGF0dXMoMjAwKS5qc29uKG5vdGUpXG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHJlc3BvbnNlLnNlbmRTdGF0dXMoNDA0KVxuICB9XG59KTtcblxuYXBwLmRlbGV0ZSgnL2FwaS92MS9ub3Rlcy86aWQnLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcbiAgY29uc3QgeyBpZCB9ID0gcmVxdWVzdC5wYXJhbXM7XG4gIGNvbnN0IHVwZGF0ZWROb3RlcyA9IGFwcC5sb2NhbHMubm90ZXMuZmlsdGVyKChub3RlKSA9PiB7XG4gICAgcmV0dXJuIG5vdGUuaWQgIT09IGlkXG4gICAgLy9yZW1vdmUgb3IgZWRpdCB0aGlzIGlmIHRoZSBhYm92ZSBjb2RlIGRvZXNuJ3Qgd29yayBkdWUgdG8gcGFyc2luZ1xuICB9KVxuICBhcHAubG9jYWxzLm5vdGVzID0gdXBkYXRlZE5vdGVzXG4gIHJlc3BvbnNlLnN0YXR1cygyMDQpLmpzb24oYCR7aWR9IGhhcyBiZWVuIHJlbW92ZWRgKVxufSk7XG5cbmFwcC5wdXQoJy9hcGkvdjEvbm90ZXMvOmlkJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gIGNvbnN0IHsgaWQgfSA9IHJlcXVlc3QucGFyYW1zO1xuICBjb25zdCB1cGRhdGVkTm90ZXMgPSBhcHAubG9jYWxzLm5vdGVzLm1hcCgobm90ZSkgPT4ge1xuICAgIGlmIChub3RlLmlkID09PSBpZCkge1xuICAgICAgbm90ZS50aXRsZSA9IHJlcXVlc3QuYm9keVxuICAgIH0gXG4gICAgcmV0dXJuIG5vdGVcbiAgfSlcbiAgYXBwLmxvY2Fscy5ub3RlcyA9IHVwZGF0ZWROb3Rlc1xuICByZXNwb25zZS5zdGF0dXMoMjAyKS5qc29uKGAke3JlcXVlc3QuYm9keX0gaGFzIGJlZW4gdXBkYXRlZGApXG59KTtcblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "use",
        "json",
        "set",
        "locals",
        "title",
        "notes",
        "items",
        "get",
        "request",
        "response",
        "post",
        "id",
        "Date",
        "now",
        "body",
        "status",
        "send",
        "error",
        "push",
        "params",
        "note",
        "find",
        "sendStatus",
        "delete",
        "updatedNotes",
        "filter",
        "put",
        "map"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/ericweissman/turing/mod3/trapper-keeper-fullstack/trapper-keeper-be",
      "sourcesContent": [
        "const express = require('express');\nconst app = express();\napp.use(express.json())\n\napp.set('port', 3001);\napp.locals.title = 'Trapper Keeper';\napp.locals.notes = [];\napp.locals.items = [];\n\n\napp.get('/api/v1/notes', (request, response) => {\n  const notes = app.locals.notes;\n  return response.json({notes})\n});\n\napp.post('/api/v1/notes', (request, response) => {\n  const id = Date.now();\n  const { title } = request.body;\n\n  if (!title) {\n    return response.status(422),send({\n      error: 'No note title provided'\n    });\n  } else {\n    app.locals.notes.push({ id, title })\n    return response.status(201).json( { id, title });\n  }\n});\n\napp.get('/api/v1/notes/:id', (request, response) => {\n  const { id } = request.params;\n  const note = app.locals.notes.find(note => note.id == id);\n  if (note) {\n    return response.status(200).json(note)\n  } else {\n    return response.sendStatus(404)\n  }\n});\n\napp.delete('/api/v1/notes/:id', (request, response) => {\n  const { id } = request.params;\n  const updatedNotes = app.locals.notes.filter((note) => {\n    return note.id !== id\n    //remove or edit this if the above code doesn't work due to parsing\n  })\n  app.locals.notes = updatedNotes\n  response.status(204).json(`${id} has been removed`)\n});\n\napp.put('/api/v1/notes/:id', (request, response) => {\n  const { id } = request.params;\n  const updatedNotes = app.locals.notes.map((note) => {\n    if (note.id === id) {\n      note.title = request.body\n    } \n    return note\n  })\n  app.locals.notes = updatedNotes\n  response.status(202).json(`${request.body} has been updated`)\n});\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550017461301
  }
}